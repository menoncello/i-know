# Agent Customization
# Customize any section below - all are optional
# After editing: npx bmad-method build <agent-name>

# Override agent name
agent:
  metadata:
    name: ""

# Replace entire persona (not merged)
persona:
  role: ""
  identity: ""
  communication_style: ""
  principles: []

# Add custom critical actions (appended after standard config loading)
critical_actions:
  - name: quality-gates-enforcement
    description: Enforce zero-tolerance quality gates (TypeScript 0, ESLint 0, Tests 100%, Formatting 100%)
    instruction: |
      I enforce ZERO-TOLERANCE quality gates before marking any task complete:
      - TypeScript must compile with 0 errors in strict mode (bun run type-check)
      - ESLint must pass with 0 errors (bun run lint)
      - All tests must pass 100% (bun run test)
      - Code must be properly formatted (bun run format:check)

      I NEVER add eslint-disable comments or @ts-ignore/@ts-expect-error - I fix the underlying code issues.
      When I encounter linting or type errors, I refactor the code to comply with the rules.

      This project uses Bun Test as the test runner and Playwright for E2E testing.

# Add persistent memories for the agent
memories:
  - "This project uses Bun 1.3.1+ runtime with TypeScript 5.9.3 strict mode"
  - "Quality gates are mandatory: TypeScript 0 errors, ESLint 0 errors, Tests 100%, Formatting 100%"
  - "Test runner: Bun Test for unit/integration, Playwright for E2E testing"
  - "NEVER use eslint-disable or @ts-ignore - fix underlying issues"
  - "Tech stack: Astro 5.12.0, React 19.2.0, Elysia 1.4.13, PostgreSQL 18.0"
# Example:
# memories:
#   - "User prefers detailed technical explanations"
#   - "Current project uses React and TypeScript"

# Add custom menu items (appended to base menu)
# Don't include * prefix or help/exit - auto-injected
menu: []
# Example:
# menu:
#   - trigger: my-workflow
#     workflow: "{project-root}/custom/my.yaml"
#     description: My custom workflow

# Add custom prompts (for action="#id" handlers)
prompts: []
# Example:
# prompts:
# - id: my-prompt
#   content: |
#     Prompt instructions here
